name: 🕶️ Nightly Release

on:
  # add push also
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Zon-broken-pipe=kill

jobs:
  release:
    strategy:
      matrix:
        include:
          - name: linux-x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            command: cross
          - name: linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            command: cross
          - name: windows-x64
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu
            command: cross
          - name: windows-arm64
            os: ubuntu-latest
            target: aarch64-pc-windows-gnu
            command: cross
          - name: macos-x64
            os: macos-latest
            target: x86_64-apple-darwin
            command: cargo
          - name: macos-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            command: cargo
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build
        run: ${{ matrix.command }} build --release --target ${{ matrix.target }}
      - name: Copy
        id: archive
        shell: bash
        run: |
          DIR="s4n-${{github.ref_name}}-${{matrix.name}}"
          if [[ "${{ matrix.target }}" =~ "-pc-windows-" ]]; then
              SUFFIX=".exe"
          else
              SUFFIX=""
          fi
          mkdir "$DIR"
          cp "target/${{matrix.target}}/release/s4n.$SUFFIX" "$DIRECTORY"
          7z a "$DIRECTORY.zip" "$DIRECTORY"
          echo "path=$DIRECTORY.zip" >> $GITHUB_OUTPUT
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: s4n-${{github.ref_name}}-${{matrix.name}}
          path: | 
            ${{ steps.archive.outputs.path }}
