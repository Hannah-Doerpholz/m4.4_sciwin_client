---
import { Code } from "@astrojs/starlight/components";
import { LinkButton } from "@astrojs/starlight/components";
import s4n_cmd from "/src/assets/s4n.txt?raw";

const { data } = Astro.locals.starlightRoute.entry;
const { title = data.title, tagline, image, actions = [] } = data.hero || {};

const isHome = Astro.url.pathname === "/";
---

<div class="hero">
    <div class="sl-flex stack">
        <div class="sl-flex copy">
            <h1 id="_top" data-page-title set:html={title} />
            {tagline && <div class="tagline" set:html={tagline} />}
        </div>
        {
            actions.length > 0 && (
                <div class="sl-flex actions">
                    {actions.map(
                        ({
                            attrs: { class: className, ...attrs } = {},
                            icon,
                            link: href,
                            text,
                            variant,
                        }) => (
                            <LinkButton
                                {href}
                                {variant}
                                icon={icon?.name}
                                class:list={[className]}
                                {...attrs}
                            >
                                {text}
                                {icon?.html && (
                                    <Fragment set:html={icon.html} />
                                )}
                            </LinkButton>
                        ),
                    )}
                </div>
            )
        }
    </div>
    {isHome &&  <Code code={s4n_cmd} frame="terminal" wrap={true} lang="ansi"/>  }
</div>

<style>
    @layer starlight.core {
        .hero {
            display: flex;
            flex-direction: column;
            gap: 2rem;
            align-items: center;
            padding-bottom: 1rem;
        }

        .hero > img,
        .hero > .hero-html {
            object-fit: contain;
            order: 2;
            width: min(80%, 25rem);
            height: auto;
            margin-inline: auto;
        }

        .stack {
            flex-direction: column;
            gap: clamp(1.5rem, calc(1.5rem + 1vw), 2rem);
            text-align: center;
        }

        .copy {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
            align-items: center;
        }

        h1 {
            font-size: clamp(
                var(--sl-text-3xl),
                calc(0.25rem + 5vw),
                var(--sl-text-6xl)
            );
            line-height: var(--sl-line-height-headings);
            font-weight: 900;
            color: var(--sl-color-white);
        }
        .tagline {
            font-size: clamp(
                var(--sl-text-base),
                calc(0.0625rem + 2vw),
                var(--sl-text-xl)
            );
            color: var(--sl-color-gray-2);
        }

        .actions {
            gap: 1rem 2rem;
            flex-wrap: wrap;
            justify-content: center;
        }
        @media (min-width: 50rem) {
            .hero {
                grid-template-columns: 7fr 4fr;
                gap: 3rem;
                padding-block: clamp(2.5rem, calc(1rem + 10vmin), 10rem);
            }

            .hero > img,
            .hero > .hero-html {
                width: 100%;
            }
        }
    }
</style>
